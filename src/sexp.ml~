type sexp_tree = UNSAT | UNKNOWN | SAT of sat_tree list
   and
     sat_tree =
     | T of string * string list
     | V of string * string
     | F of string * lambda
   and
     lambda = (string * string) list * decision_tree
   and
     decision_tree = Atom of string | ITE of ((string*string) list) * string * decision_tree
			  
let tree_to_sexp_tree t =
  match t with
  | Sexplib.Type.Atom "UNSAT" -> UNSAT
  | Sexplib.Type.Atom "UNKNOWN" -> UNKNOWN
  | _ -> SAT []

let sexp_to_sexp_tree path =
  let ic = open_in path in
  let t = Sexplib.Sexp.input_sexp ic in
  tree_to_sexp_tree t

let print_sexp_tree t =
  let print_ =
  match t with
  | UNSAT -> print_string "UNSAT";
  | UNKNOWN -> print_string "UNKNOWN";
  | SAT _ -> print_string "SAT";
  in
  print_ ;
  print_newline ()
			  
let print_sexp s = print_sexp_tree (sexp_to_sexp_tree s)

	     
