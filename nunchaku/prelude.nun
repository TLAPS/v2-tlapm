val u : type [infinite].
val alpha_u : type [approx_of u].
val upcast : alpha_u -> u [upcast].

include "set-theory.nun".

spec dom : u -> u
and app : u -> u -> u :=
	 forall f g. (dom (upcast f) = dom (upcast g)) && (forall x. mem x (dom (upcast f)) => ((app (upcast f) x)=(app (upcast g) x))) => (f=g).